// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "agent": {
    "inline_assistant_model": {
      "provider": "zed.dev",
      "model": "claude-3-7-sonnet-latest"
    },
    "always_allow_tool_actions": true,
    "default_profile": "write",
    "default_model": {
      "provider": "zed.dev",
      "model": "claude-3-7-sonnet-thinking-latest"
    },
    "version": "2"
  },
  "features": {
    "edit_prediction_provider": "zed"
  },
  "base_keymap": "VSCode",
  "vim_mode": true,
  "ui_font_size": 16,
  "ui_font_family": "DinaRemasterII",
  "buffer_font_family": "DinaRemasterII",
  "buffer_font_size": 16.0,
  "theme": "Quill",
  "terminal": {
    "dock": "right"
  },
  "languages": {
    "JSON": {
      "tab_size": 4
    },
    "TypeScript": {
      "code_actions_on_format": {
        "source.fixAll": true,
        "addMissingImport": true,
        "source.fixAll.eslint": true,
        "source.organizeImports": true
      },
      "format_on_save": "prettier"
    },
    "JavaScript": {
      "code_actions_on_format": {
        "source.fixAll": true,
        "addMissingImport": true,
        "source.fixAll.eslint": true,
        "source.organizeImports": true
      }
    },
    "Go": {
      "code_actions_on_format": {
        "source.organizeImports": true
      }
    }
  },
  "lsp": {
    "gopls": {
      "initialization_options": {
        "hints": {
          "assignVariableTypes": true,
          "compositeLiteralFields": true,
          "compositeLiteralTypes": true,
          "constantValues": true,
          "functionTypeParameters": true,
          "parameterNames": true,
          "rangeVariableTypes": true
        }
      }
    },
    "vtsls": {
      "settings": {
        // For JavaScript:
        "javascript": {
          "inlayHints": {
            "parameterNames": {
              "enabled": "all",
              "suppressWhenArgumentMatchesName": false
            },
            "parameterTypes": {
              "enabled": true
            },
            "variableTypes": {
              "enabled": true,
              "suppressWhenTypeMatchesName": true
            },
            "propertyDeclarationTypes": {
              "enabled": true
            },
            "functionLikeReturnTypes": {
              "enabled": true
            },
            "enumMemberValues": {
              "enabled": true
            }
          }
        },
        // For TypeScript:
        "typescript": {
          "inlayHints": {
            "parameterNames": {
              "enabled": "all",
              "suppressWhenArgumentMatchesName": false
            },
            "parameterTypes": {
              "enabled": true
            },
            "variableTypes": {
              "enabled": true,
              "suppressWhenTypeMatchesName": true
            },
            "propertyDeclarationTypes": {
              "enabled": true
            },
            "functionLikeReturnTypes": {
              "enabled": true
            },
            "enumMemberValues": {
              "enabled": true
            }
          }
        }
      }
    }
  }
}
